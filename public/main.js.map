{"version":3,"sources":["./src/app/feedback-form/feedback.service.ts","./src/app/summary-screen/summary-screen.component.ts","./src/app/summary-screen/summary-screen.component.html","./src/environments/environment.ts","./src/app/feedback-form/feedback-form.component.ts","./src/app/feedback-form/feedback-form.component.html","./src/app/starting-screen/starting-screen.component.ts","./src/app/starting-screen/starting-screen.component.html","./src/app/feedbacks-list/feedbacks-list.component.ts","./src/app/feedbacks-list/feedbacks-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(private http: HttpClient) { }\n\n  addFeedback(newFeedback) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n      return this.http.post('http://localhost:3000/feedbacks', newFeedback, {headers: headers}).subscribe(newFeedback => newFeedback);\n  }\n\n  getFeedbacks() {\n    return this.http.get('http://localhost:3000/feedbacks');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-summary-screen',\n  templateUrl: './summary-screen.component.html',\n  styleUrls: ['./summary-screen.component.css']\n})\nexport class SummaryScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Thank you for your feedback!</h1>\n<button type=\"button\" class=\"btn btn-primary\" routerLink=\"/\">Go back to main screen</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit} from \"@angular/core\";\nimport { Feedback } from \"./feedback\";\nimport { FeedbackService } from \"./feedback.service\";\nimport { Router } from \"@angular/router\";\nimport {NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-feedback-form',\n  templateUrl: './feedback-form.component.html',\n  styleUrls: ['./feedback-form.component.css'],\n  providers: [FeedbackService]\n})\nexport class FeedbackFormComponent implements OnInit {\n\n  login: String;\n  email: String;\n  rating: String;\n  title: String;\n  description: String;\n  submitted = false;\n\n  constructor(private feedbackService: FeedbackService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  addFeedback(form: NgForm) {\n    this.submitted=true;\n\n    if(form.invalid) {\n     return;\n    }\n\n    const newFeedback = {\n      login: this.login,\n      email: this.email,\n      rating: this.rating,\n      title: this.title,\n      description: this.description\n    }\n\n    this.feedbackService.addFeedback(newFeedback);\n    this.router.navigate(['/summary']);\n\n  }\n}\n","<h1>Share your feedback</h1>\n<div class=\"container\">\n  <form (submit)=\"addFeedback(postForm)\" #postForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label>Login:</label>\n      <input type=\"text\" [(ngModel)]=\"login\" name=\"login\" class=\"form-control\" #login_=\"ngModel\" required>\n      <div *ngIf=\"login_.invalid && submitted\" class=\"alert alert-info\">\n        <div *ngIf=\"login_.errors.required\">\n          Login is required.\n        </div>\n      </div>\n      <label>Email:</label>\n      <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" #email_=\"ngModel\"\n             pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required>\n      <div *ngIf=\"email_.invalid && submitted\" class=\"alert alert-info\">\n        <div *ngIf=\"email_.errors?.required\">\n          Email is required.\n        </div>\n        <div *ngIf=\"email_.errors?.pattern\">\n          Type a correct email\n        </div>\n      </div>\n      <label>Title:</label>\n      <input type=\"text\" [(ngModel)]=\"title\" name=\"title\" class=\"form-control\" #title_=\"ngModel\" required>\n      <div *ngIf=\"title_.invalid && submitted\" class=\"alert alert-info\">\n        <div *ngIf=\"login_.errors?.required\">\n          Title is required.\n        </div>\n      </div>\n      <label>Description:</label>\n      <textarea [(ngModel)]=\"description\" name=\"description\" rows=\"5\" class=\"form-control\" #description_=\"ngModel\"\n                minlength=\"20\" required></textarea>\n      <div *ngIf=\"description_.invalid && submitted\" class=\"alert alert-info\">\n        <div *ngIf=\"description_.errors?.required\">\n          Description is required.\n        </div>\n        <div *ngIf=\"description_.errors?.minlength\">\n          Description must be at least 20 characters long.\n        </div>\n      </div>\n      <label>Rating:</label><br/>\n      <ngx-input-star-rating [(ngModel)]=\"rating\" name=\"rating\" required #rating_=\"ngModel\"></ngx-input-star-rating>\n      <div *ngIf=\"rating_.invalid && submitted\" class=\"alert alert-info\">\n        <div *ngIf=\"rating_.errors?.required\">\n          Please rate our product.\n        </div>\n      </div>\n    </div>\n    <div class=\"buttons\">\n    <input type=\"submit\" class=\"btn btn btn-primary\"  routerLink=\"/\" value=\"Return\">\n    <input type=\"submit\" class=\"btn btn btn-primary\" value=\"Add\">\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-starting-screen',\n  templateUrl: './starting-screen.component.html',\n  styleUrls: ['./starting-screen.component.css']\n})\nexport class StartingScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Welcome to our app!</h1>\n<button type=\"button\" class=\"btn btn-primary\" routerLink=\"/form\">Send us your feedback</button>\n<button type=\"button\" class=\"btn btn-primary\" routerLink=\"/feedbacks\">Check feedbacks of other users</button>\n","import {Component, OnInit} from '@angular/core';\nimport {Feedback} from \"../feedback-form/feedback\";\nimport {FeedbackService} from \"../feedback-form/feedback.service\";\n\n@Component({\n  selector: 'app-feedbacks-list',\n  templateUrl: './feedbacks-list.component.html',\n  styleUrls: ['./feedbacks-list.component.css']\n})\nexport class FeedbacksListComponent implements OnInit {\n\n  feedbacks: Feedback[];\n\n  constructor(private feedbackService: FeedbackService) {\n  }\n\n  ngOnInit(): void {\n    this.getFeedbacks();\n  }\n\n  parseDates(feedbacks: Feedback[]) {\n    feedbacks.forEach((feedback) => {\n      let index = feedback.date.indexOf('T');\n      feedback.date = feedback.date.substring(0, index);\n    });\n  }\n\n  getFeedbacks() {\n    this.feedbackService.getFeedbacks().subscribe((feedbacks: Feedback[]) => {\n      this.parseDates(feedbacks);\n      this.feedbacks = feedbacks;\n    });\n  }\n}\n","<h1>User feedbacks:</h1>\n<div class=\"feedbacks\">\n  <mat-accordion multi=\"true\">\n    <mat-expansion-panel *ngFor=\"let feedback of feedbacks\">\n      <mat-expansion-panel-header>\n        <b>{{ feedback.title }}</b>\n        <div id=\"date\">{{ feedback.date}}</div>\n      </mat-expansion-panel-header>\n      {{ feedback.login }}\n      <hr>\n      <p>{{ feedback.description }}</p>\n      <p>Rating: <ngx-input-star-rating value=\"{{feedback.rating}}\" name=\"rating\"></ngx-input-star-rating></p>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n<button type=\"button\" class=\"btn btn-primary\" routerLink=\"/\">Return to main screen</button>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {FeedbackFormComponent} from './feedback-form/feedback-form.component';\n\nimport {HttpClientModule} from '@angular/common/http'\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgxInputStarRatingModule} from '@ngx-lite/input-star-rating';\nimport { FeedbacksListComponent } from './feedbacks-list/feedbacks-list.component';\nimport { StartingScreenComponent } from './starting-screen/starting-screen.component';\nimport { SummaryScreenComponent } from './summary-screen/summary-screen.component';\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport { BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FeedbackFormComponent,\n    FeedbacksListComponent,\n    StartingScreenComponent,\n    SummaryScreenComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxInputStarRatingModule,\n    MatExpansionModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FeedbacksListComponent } from \"./feedbacks-list/feedbacks-list.component\";\nimport { FeedbackFormComponent } from \"./feedback-form/feedback-form.component\";\nimport { StartingScreenComponent } from \"./starting-screen/starting-screen.component\";\nimport {SummaryScreenComponent} from \"./summary-screen/summary-screen.component\";\n\nconst routes: Routes = [{path: '', component: StartingScreenComponent}, { path: 'form', component: FeedbackFormComponent}, {path: 'summary', component: SummaryScreenComponent},\n  {path: 'feedbacks', component: FeedbacksListComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}